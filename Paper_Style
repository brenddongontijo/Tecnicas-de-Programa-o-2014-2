Folha de Estilo

	Esta Folha de Estilo tem como objetivo criar um padrão de programação que será utilizado como base para melhor organização e entendimento no projeto QualCurso que baseia-se numa aplicação android. Linguagens utilizadas: Java e Android.
	Cada tópico a seguir estará explicando e exemplificando os padrões que deverão ser seguidos.

1.0 Comentários:

•	Os comentários devem estar em inglês.

•	Comentário simples: os comentários simples devem ter espaçamento simples após o “//”, letra maiúscula na primeira palavra e ser finalizado com ponto final. 
Exemplo: 
// This method aims to calculate the mean between two numbers.

•	Comentário composto: os comentários compostos serão iniciados uma linha acima do método, variável, etc com o “/*” e será necessário pular uma linha e dar espaço equivalente a um TAB para digitar o texto que será finalizado com o ponto final, logo em seguida será pulada outra linha para finalizar o comentário com “*/”.
Exemplo:
/*
	 * The method save() receives a instance from Article and saves into Database
	 * also setting his Id using the method last().
	 */

•	Todos os métodos devem conter comentários.

•	Caso haja alguma variável, atribuição ou qualquer item que possa ser confuso, deve ser realizado o comentário logo em cima do mesmo explicando.
Exemplo:
// This attribute keeps the name of employees.
String nameOfEmployess.

2.0 Métodos:

•	Os métodos deverão sempre seguir os padrões de indentação do Java. 

•	Chaves para iniciação: a chave de iniciação “{“ de um método deverá estar na mesma linha que o mesmo se encontra e com um espaço simples, já a de conclusão “}” deverá ser colocada uma linha após a conclusão do método.
Exemplo:
public boolean onCreateOptionsMenu(Menu menu) {
	getMenuInflater().inflate(R.menu.main, menu);
	return true;
}

•	Nome de métodos: os nomes dos métodos deverão estar em inglês e seguir os padrões do Java, ou seja, serem uma única palavra iniciados com letra minúscula e depois letra maiúscula conforme o necessário.
Exemplo: 
public boolean onCreateOptionsMenu(Menu menu) {
	// Method.
}

3.0 Variáveis:

•	Nome de variável: iniciado com letra minúscula, inglês, sem abreviações e de fácil entendimento.
Exemplo:
private int bookName;

•	Usar constantes para evitar complicações durante a leitura do código.
Exemplo:
private static final String CONSTANT = "constant";

•	Sempre inicializar as variáveis, independente do seu tipo.
Exemplo:
private int number = 0;
private String empty = "";

•	Declarar cada variável em uma linha diferente.
Exemplo:
private int numberOfBooks = 0;
private int numberOArticles = 0;

•	Realizar o incremento de variáveis conforme o seguinte exemplo:
Exemplo:
private int numberOfBooks = 0;
numberOfBooks = numberOfBooks + 1;

4.0 Estruturas Básicas:

•	if/else: sempre que for utilizado a função "if" deve-se, também, criar um "else" para especificar ambos os caminhos, a estrutura também deve seguir os seguintes padrões de indentação.
Exemplo:
if(numberOfBooks < maximumNumberOfBooks) {
	// Function.
}
else {
	// Function.
}

•	for: não utilizar o incremento nas variáveis como "i++", atribuir nome significativos para os contadores, e seguir o seguinte tipo de indentação.   
Exemplo:
for(counter = 0; counter < maximumNumberOfBooks; counter = counter + 1) {
	// Function.
}

•	switch/case: sempre deverá conter o caso "default", seguindo os padrões de indentação do java conforme o exemplo.
Exemplo:
switch(bookCategory) {
	case 1:
		// Method.
		break;
	case 2:
		// Method.
		break;
	default:
		// Method.
		break;
}

5.0 XML: 

6.0 Problems/Warnings: 
•	Não deixar o projeto contendo warnings, procurar sempre resolvê-los.