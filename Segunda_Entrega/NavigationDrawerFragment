Class:

	public class NavigationDrawerFragment extends Fragment

Methods:

    void onNavigationDrawerItemSelected(int position)

    public NavigationDrawerFragment()

    public void onCreate(Bundle savedInstanceState)

    public void onActivityCreated (Bundle savedInstanceState)

    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState)

	public void onItemClick(AdapterView<?> parent, View view, int position, long id)
	
	public boolean isDrawerOpen()

    public void setUp(int fragmentId, DrawerLayout drawerLayout)

    public void onDrawerClosed(View drawerView)

    public void onDrawerOpened(View drawerView)
    
    public void run()

    public void onAttach(Activity activity)

    public void onDetach()

    public void onSaveInstanceState(Bundle outState)

    public void onConfigurationChanged(Configuration newConfig)

    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater)

    public boolean onOptionsItemSelected(MenuItem item)

    public CharSequence getFormatedTitle(CharSequence s)

    public static interface NavigationDrawerCallbacks
    
    private void selectItem(int position)
    
    private void showGlobalContextActionBar()
    
    private ActionBar getActionBar()

Variables:

	private static final String STATE_SELECTED_POSITION = "selected_navigation_drawer_position";
	-> Remember the position of the selected item.
	
    private static final String PREF_USER_LEARNED_DRAWER = "navigation_drawer_learned";
	-> Per the design guidelines, you should show the drawer on launch until the user manually
    expands it. This shared preference tracks this.
    
    private NavigationDrawerCallbacks mCallbacks;
	-> A pointer to the current callbacks instance (the Activity).
	
    private ActionBarDrawerToggle mDrawerToggle;
	-> Helper component that ties the action bar to the navigation drawer.
	
    private DrawerLayout mDrawerLayout;

    private ListView mDrawerListView;

    private View mFragmentContainerView;

    private int mCurrentSelectedPosition = 0;

    private boolean mFromSavedInstanceState;

    private boolean mUserLearnedDrawer;
